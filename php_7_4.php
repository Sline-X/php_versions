<?php

//Типизированные свойства
//Свойства класса теперь поддерживают объявления типов.
class User {
    public int $id;
    public string $name;
}

//Стрелочные функции
//Стрелочные функции - это сокращённая запись для определения функций с неявной привязкой 
//родительской области видимости по значению.
$factor = 10;
$nums = array_map(fn($n) => $n * $factor, [1, 2, 3, 4]);
// $nums = array(10, 20, 30, 40);

//Ограниченная ковариация возвращаемого типа и контравариантность типа аргумента
class A {}
class B extends A {}

class Producer {
    public function method(): A {}
}
class ChildProducer extends Producer {
    public function method(): B {}
}
//Полная поддержка вариантности доступна только при использовании автозагрузки. 
//Внутри одного файла могут быть только нециклические ссылки, поскольку все классы должны быть 
//определены, перед тем как на них ссылаться.

//Присваивающий оператор объединения с null
$array['key'] ??= computeDefault();
// примерно то же самое
if (!isset($array['key'])) {
    $array['key'] = computeDefault();
}

//Распаковка внутри массивов
$parts = ['apple', 'pear'];
$fruits = ['banana', 'orange', ...$parts, 'watermelon'];
// ['banana', 'orange', 'apple', 'pear', 'watermelon'];


//Пользовательская сериализация объектов
//Добавлен новый механизм сериализации пользовательских объектов, использующий два новых 
//магических метода: __serialize и __unserialize.

// Возвращает массив, содержащий все необходимое состояние объекта.
//public function __serialize(): array;

// Восстанавливает состояние объекта из указанного массива данных.
//public function __unserialize(array $data): void;